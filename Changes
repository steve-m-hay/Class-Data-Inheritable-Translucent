Revision history for Perl distribution Class-Data-Inheritable-Translucent

2.00 Development

    - Added mk_object_accessor(), which creates a non-translucent object
      attribute accessor.  In this case there is no inherited translucent class
      data for the object to override, but a default value can still be
      specified, and in theory restored later in a similar manner to removing an
      object's override of translucent class data to reveal the inherited class
      data value.  However, it would be quite unnatural to set such an attribute
      to the undefined value in order to restore the original default value, so
      a new, more obvious, behaviour has been introduced:  The attribute must be
      deleted from the object, i.e. delete()d from the attrs() hash.

      The same behaviour has been extended to include translucent object
      attributes as well, partly for consistency, and partly because it is a
      more natural behaviour (and no longer precludes the possibility of
      actually setting an attribute to the undefined value if required!).  Two
      related CPAN modules (Class::Data::Accessor and Class::Accessor::Grouped)
      also behave this way.  This feature was not documented other than being
      illustrated in the SYNOPSIS but because of the change in behaviour that
      some users may have been relying on, the $VERSION has been given a major
      version bump and appropriate notices have been added to the man page and
      README.

    - Renamed mk_translucent() to mk_translucent_accessor() (retaining the old
      name for backwards compatibility) and added mk_class_accessor(), which
      does exactly what mk_classdata() does in Class::Data::Inheritable except
      that it makes use of Sub::Name, supports the use of non hash-based objects
      and doesn't blindly overwrite any existing (accessor) methods.  Thus, if,
      like me, you're bugged that the maintainer of Class::Data::Inheritable has
      never seen fit to address CPAN RT#51228 or CPAN RT#6281, you can now use
      mk_class_accessor() here instead (without your class data accessor taking
      on the double life of a translucent object attribute accessor, as would be
      the case if you simply used mk_translucent_accessor() instead).

    - Made mk_translucent() croak() if wrongly called as an object method.

    - Added optional Changes testing (skipped unless AUTHOR_TESTING).

    - Reformatted Changes file as per CPAN::Changes::Spec.

    - Made Perl Critic, Pod and Pod Coverage tests skip unless AUTHOR_TESTING.

    - Added optional Perl::Critic testing.

    - Made code Perl::Critic clean.

    - Noted other modules that do almost exactly the same thing and documented
      perhaps the biggest difference from them: that accessor methods are not
      installed if the subroutines already exist.  [CPAN RT#96066]

    - Simplified Makefile.PL requirements.

1.04 2014-05-30

    - The modules listed as recommendations of optional features are actually
      requirements of those features.

1.03 2014-05-29

    - Uploaded source code to GitHub and included repository URLs in metadata.

    - Included META.json file in addition to META.yml.

    - Set minimum required ExtUtils::MakeMaker version to 6.64 to ensure that
      all parameters used are supported, to save jumping through hoops to
      support earlier versions.  (This should not be a problem since
      ExtUtils::MakeMaker 6.64 is easily installed into Perl 5.8.1 and above,
      that being the whole point of the new choice of minimum supported Perl
      version.)

    - Set minimum required Perl version to 5.8.1.  This is in line with the
      minimum requirement of the "Perl Toolchain".

1.02 2011-06-03

    - Fixed the default implementation of attrs() to work as documented, so that
      each attribute really is now stored in $obj rather than $obj->{attrs} by
      default.

1.01 2009-11-09

    - Incorporated two improvements based on code in Class::Accessor:

      * Generated accessor methods are now named using Sub::Name if that module
        is available.

      * Existing accessor methods (or their aliases) are no longer overwritten
        by mk_translucent().

1.00 2009-11-05

    - Changed mk_translucent() so that when overriding the translucent class
      default value on a sub-class object it doesn't affect the inherited
      translucent class default value still used by other instances of that
      sub-class.  In fact, it was wrong even to install an override unless the
      attribute is actually being overriddeen on the sub-class itself rather
      than on an instance of the sub-class.  [CPAN RT#51097]

    - Changed Makefile.PL to check $ExtUtils::MakeMaker::VERSION before setting
      ABSTRACT_FROM and AUTHOR.

    - Put the NAME content all on one line in the .pm file so that the
      'abstract' is not truncated in the META.yml file.

    - Added LICENSE to Makefile.PL.

    - Removed redundant 'clean' from Makefile.PL so that it doesn't remove the
      tarball when running the 'clean' target after the 'dist' target.

    - Removed all mention of the original author's email address (at his request
      in private correspondence).

0.01 2005-12-15 15:45:14-05:00

    - omg 0.01!
