NAME
    Class::Data::Inheritable::Translucent - Inheritable, overridable,
    translucent class data / object attributes

SYNOPSIS
      package Foo;
      use base 'Class::Data::Inheritable::Translucent';

      Foo->mk_translucent("bar");
      Foo->bar("baz");

      $obj = Foo->new;

      print $obj->bar; # prints "baz"

      $obj->bar("whatever");

      print $obj->bar; # prints "whatever"
      print Foo->bar;  # prints "baz"

      $obj->bar(undef);

      print $obj->bar; # prints "baz"

DESCRIPTION
    This module is based on Class::Data::Inheritable, and is largely the
    same, except the class data accessors double as translucent object
    attributes.

    The value of object attribute $attribute, by default, is stored in
    $object->{$attribute}. See the attrs() method, explained below, on how
    to change that.

METHODS
    mk_translucent
        Creates inheritable class data / translucent instance attributes.
        Does not install the accessor method if a subroutine of the same
        name already exists; likewise for the alias method
        (_<attribute>_accessor()).

    attrs
        This method is called by the generated accessors and, by default,
        simply returns the object that called it, which should be a hash
        reference for storing object attributes. If your objects are not
        hashrefs, or you wish to store your object attributes in a different
        location, e.g. $object->{attrs}, then you should override this
        method. Class::Data::Inheritable::Translucent stores the value of
        object attribute $attribute in $object->attrs()->{$attribute}.

AUTHOR
    Ryan McGuigan

    Based on Class::Data::Inheritable, originally by Damian Conway

    Steve Hay <shay@cpan.org> is now maintaining
    Class::Data::Inheritable::Translucent as of version 1.00

ACKNOWLEDGEMENTS
    Thanks to Damian Conway for Class::Data::Inheritable

COPYRIGHT & LICENSE
    Version 0.01 Copyright 2005 Ryan McGuigan, all rights reserved. Changes
    in Version 1.00 onwards Copyright (C) 2009, 2011, 2014 Steve Hay. All
    rights reserved.

    mk_translucent is based on mk_classdata from Class::Data::Inheritable,
    Copyright Damian Conway and Michael G Schwern, licensed under the terms
    of the Perl Artistic License.

    This program is free software; It may be used, redistributed and/or
    modified under the terms of the Perl Artistic License (see
    <http://www.perl.com/perl/misc/Artistic.html>)

BUGS
    Please report any bugs or feature requests on the CPAN Request Tracker
    at
    http://rt.cpan.org/Public/Bug/Report.html?Queue=Class-Data-Inheritable-T
    ranslucent.

SEE ALSO
    * Class::Data::Inheritable - Inheritable, overridable class data without
      the translucent object data.

    * Class::Data::Accessor - An almost exact duplicate of this module,
      created only a fortnight before it!

      However, as of version 0.04004, it doesn't make use of Sub::Name (so
      all accessor methods created by it will show up as "__ANON__" in, e.g.
      profiling tools), it doesn't support non hash-based objects, it
      doesn't support the use of "undef" to wipe out an overridden object
      attribute's value and reinherit the class default, and it will blindly
      overwrite any existing (accessor) methods. It has also been deprecated
      in favour of Class::Accessor::Grouped (or Moose).

    * Class::Accessor::Grouped - The "inherited" accessor type does the same
      thing again.

      However, as of version 0.10010, whilst this does make use of
      Sub::Name, it still doesn't support non hash-based objects or "undef"
      to reset an overridden object attribute's value, and also blindly
      overwrites existing methods.

    * perltooc - Tom's OO Tutorial for Class Data in Perl - a pretty nice
      Class Data tutorial for Perl

    * The source. It's quite short, and simple enough.

